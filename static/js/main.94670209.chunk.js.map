{"version":3,"sources":["components/Card.js","components/CardList.js","components/Searchbox.js","components/Scroll.js","containers/App.js","reportWebVitals.js","index.js"],"names":["Card","id","name","email","className","alt","src","CardList","cardComponent","rob","map","user","StrictMode","Searchbox","searchChange","type","placeholder","onChange","Scroll","props","style","overflow","border","height","children","App","onSearchChange","event","setState","searchfield","target","value","state","robots","fetch","then","response","json","users","filteredRobots","this","filter","robot","toLowerCase","includes","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"2OAceA,EAZF,SAAC,GAAuB,IAAtBC,EAAqB,EAArBA,GAAIC,EAAiB,EAAjBA,KAAMC,EAAW,EAAXA,MACrB,OACI,sBAAKC,UAAU,sDAAf,UACI,qBAAKC,IAAI,SAASC,IAAG,mCAA8BL,EAA9B,mBACrB,gCACI,6BAAKC,IACL,4BAAIC,WCMLI,EAXE,SAAC,GAAa,IACrBC,EADoB,EAAVC,IACUC,KAAI,SAACC,GAC3B,OAAO,cAAC,EAAD,CAAoBV,GAAIU,EAAKV,GAAIC,KAAMS,EAAKT,KAAMC,MAAOQ,EAAKR,OAAnDQ,EAAKV,OAE3B,OACI,cAAC,IAAMW,WAAP,UACKJ,KCKEK,EAZG,SAAC,GAAoB,IAAnBC,EAAkB,EAAlBA,aAChB,OACI,qBAAKV,UAAU,MAAf,SACI,uBAAOA,UAAU,0BACjBW,KAAK,SACLC,YAAY,gBACZC,SAAUH,OCEPI,EARA,SAACC,GACZ,OACI,qBAAKC,MAAO,CAAEC,SAAU,SAAUC,OAAQ,iBAAkBC,OAAQ,SAApE,SACKJ,EAAMK,YCuCJC,G,wDApCX,aAAe,IAAD,8BACV,gBAaJC,eAAiB,SAACC,GACd,EAAKC,SAAS,CAAEC,YAAaF,EAAMG,OAAOC,SAb1C,EAAKC,MAAQ,CACTC,OAAQ,GACRJ,YAAa,IAJP,E,qDAQd,WAAoB,IAAD,OACfK,MAAM,8CACDC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAG,GAAK,OAAI,EAAKV,SAAS,CAACK,OAAQK,S,oBAO9C,WAAU,IAAD,OACCC,EAAiBC,KAAKR,MAAMC,OAAOQ,QAAO,SAAAC,GAC5C,OAAOA,EAAMxC,KAAKyC,cAAcC,SAAS,EAAKZ,MAAMH,YAAYc,kBAEpE,OACI,cAAC,IAAM/B,WAAP,UACI,sBAAKR,UAAU,KAAf,UACI,6CACA,cAAC,EAAD,CAAWU,aAAc0B,KAAKd,iBAAiB,uBAC/C,cAAC,EAAD,UACI,cAAC,EAAD,CAAUjB,IAAK8B,e,GA7BrBM,cCKHC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBb,MAAK,YAAkD,IAA/Cc,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,O,MCIdO,IAASC,OACP,cAAC,IAAM3C,WAAP,UACE,cAAC,EAAD,MAEF4C,SAASC,eAAe,SAM1BX,M","file":"static/js/main.94670209.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst Card = ({id, name, email}) => {\r\n    return(\r\n        <div className='tc bg-light-green dib br3 pa3 ma2 grow bw2 shadow-5'>\r\n            <img alt=\"robots\" src={`https://robohash.org/robo${id}?size=200x200`}/>\r\n            <div>\r\n                <h2>{name}</h2>\r\n                <p>{email}</p>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Card;","import React from 'react';\r\nimport Card from './Card';\r\n\r\nconst CardList = ({ rob }) => {\r\n    const cardComponent = rob.map((user) => {\r\n        return <Card key={user.id} id={user.id} name={user.name} email={user.email}/>\r\n    });\r\n    return(\r\n        <React.StrictMode>\r\n            {cardComponent}\r\n        </React.StrictMode>\r\n    );\r\n}\r\n\r\nexport default CardList;","import React from 'react';\r\n\r\nconst Searchbox = ({searchChange}) => {\r\n    return (\r\n        <div className='pa2'>\r\n            <input className='pa3 ba bg-lightest-blue'\r\n            type='search' \r\n            placeholder='search robots' \r\n            onChange={searchChange}\r\n            />\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Searchbox;","import React from 'react';\r\n\r\nconst Scroll = (props) => {\r\n    return (\r\n        <div style={{ overflow: 'scroll', border: '5x solid black', height: '800px'}}>\r\n            {props.children}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Scroll;","import React, { Component } from 'react';\r\nimport CardList from '../components/CardList';\r\nimport Searchbox from '../components/Searchbox';\r\nimport Scroll from '../components/Scroll';\r\nimport './App.css';\r\n// import { robots } from './robots';\r\n\r\nclass App extends Component {\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            robots: [],\r\n            searchfield: ''\r\n        }\r\n    }\r\n\r\n    componentDidMount(){\r\n        fetch('https://jsonplaceholder.typicode.com/users')\r\n            .then(response => response.json())\r\n            .then(users => this.setState({robots: users}));\r\n    }\r\n\r\n    onSearchChange = (event) => {\r\n        this.setState({ searchfield: event.target.value });\r\n    }\r\n\r\n    render() {\r\n        const filteredRobots = this.state.robots.filter(robot => {\r\n            return robot.name.toLowerCase().includes(this.state.searchfield.toLowerCase());\r\n        })\r\n        return(\r\n            <React.StrictMode>\r\n                <div className='tc'>\r\n                    <h1>RoboFriends</h1>\r\n                    <Searchbox searchChange={this.onSearchChange}/><br />\r\n                    <Scroll>\r\n                        <CardList rob={filteredRobots} />\r\n                    </Scroll>\r\n                </div>\r\n            </React.StrictMode >\r\n        );\r\n    }\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './containers/App';\n// import Card from './Card';\n// import CardList from './CardList';\n// import { robots } from './robots.js';\nimport reportWebVitals from './reportWebVitals';\nimport 'tachyons';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}